/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ChallengesIndexImport } from './routes/challenges/index'
import { Route as ChallengesFluidMenuAnimationImport } from './routes/challenges/fluid-menu-animation'
import { Route as ChallengesDynamicStatusIndicatorImport } from './routes/challenges/dynamic-status-indicator'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChallengesIndexRoute = ChallengesIndexImport.update({
  id: '/challenges/',
  path: '/challenges/',
  getParentRoute: () => rootRoute,
} as any)

const ChallengesFluidMenuAnimationRoute =
  ChallengesFluidMenuAnimationImport.update({
    id: '/challenges/fluid-menu-animation',
    path: '/challenges/fluid-menu-animation',
    getParentRoute: () => rootRoute,
  } as any)

const ChallengesDynamicStatusIndicatorRoute =
  ChallengesDynamicStatusIndicatorImport.update({
    id: '/challenges/dynamic-status-indicator',
    path: '/challenges/dynamic-status-indicator',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/challenges/dynamic-status-indicator': {
      id: '/challenges/dynamic-status-indicator'
      path: '/challenges/dynamic-status-indicator'
      fullPath: '/challenges/dynamic-status-indicator'
      preLoaderRoute: typeof ChallengesDynamicStatusIndicatorImport
      parentRoute: typeof rootRoute
    }
    '/challenges/fluid-menu-animation': {
      id: '/challenges/fluid-menu-animation'
      path: '/challenges/fluid-menu-animation'
      fullPath: '/challenges/fluid-menu-animation'
      preLoaderRoute: typeof ChallengesFluidMenuAnimationImport
      parentRoute: typeof rootRoute
    }
    '/challenges/': {
      id: '/challenges/'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/challenges/dynamic-status-indicator': typeof ChallengesDynamicStatusIndicatorRoute
  '/challenges/fluid-menu-animation': typeof ChallengesFluidMenuAnimationRoute
  '/challenges': typeof ChallengesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/challenges/dynamic-status-indicator': typeof ChallengesDynamicStatusIndicatorRoute
  '/challenges/fluid-menu-animation': typeof ChallengesFluidMenuAnimationRoute
  '/challenges': typeof ChallengesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/challenges/dynamic-status-indicator': typeof ChallengesDynamicStatusIndicatorRoute
  '/challenges/fluid-menu-animation': typeof ChallengesFluidMenuAnimationRoute
  '/challenges/': typeof ChallengesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/challenges/dynamic-status-indicator'
    | '/challenges/fluid-menu-animation'
    | '/challenges'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/challenges/dynamic-status-indicator'
    | '/challenges/fluid-menu-animation'
    | '/challenges'
  id:
    | '__root__'
    | '/'
    | '/challenges/dynamic-status-indicator'
    | '/challenges/fluid-menu-animation'
    | '/challenges/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChallengesDynamicStatusIndicatorRoute: typeof ChallengesDynamicStatusIndicatorRoute
  ChallengesFluidMenuAnimationRoute: typeof ChallengesFluidMenuAnimationRoute
  ChallengesIndexRoute: typeof ChallengesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChallengesDynamicStatusIndicatorRoute: ChallengesDynamicStatusIndicatorRoute,
  ChallengesFluidMenuAnimationRoute: ChallengesFluidMenuAnimationRoute,
  ChallengesIndexRoute: ChallengesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/challenges/dynamic-status-indicator",
        "/challenges/fluid-menu-animation",
        "/challenges/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/challenges/dynamic-status-indicator": {
      "filePath": "challenges/dynamic-status-indicator.tsx"
    },
    "/challenges/fluid-menu-animation": {
      "filePath": "challenges/fluid-menu-animation.tsx"
    },
    "/challenges/": {
      "filePath": "challenges/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
